.main.svelte-1blwj8e{position:relative;z-index:1}
h1.svelte-13vgy2g,p.svelte-13vgy2g{margin:0 auto}h1.svelte-13vgy2g{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-13vgy2g{margin:1em auto}@media(min-width: 480px){h1.svelte-13vgy2g{font-size:4em}}
.main.svelte-k5z55r{position:absolute;margin:0 150px}
.main.svelte-k5z55r{position:absolute;margin:0 150px}
.main.svelte-1ugvosc{position:absolute;margin:0 150px}.tac.svelte-1ugvosc{text-align:center}.center.svelte-1ugvosc{margin:0 150px;text-align:justify;text-justify:inter-word}
.links.svelte-1105uq2{margin-left:-145px}.line.svelte-1105uq2{position:absolute;height:4px;border-radius:6px;width:100px;background-color:var(--primary);bottom:-1.5px;transition:left .3s}.link.svelte-1105uq2{text-decoration:none;padding:0 16px;font-size:1.1em;transition:color .3s}.active.svelte-1105uq2,.link.svelte-1105uq2:hover{color:var(--primary)}.logo.svelte-1105uq2{font-size:2.3em}.wrapper.svelte-1105uq2{position:relative;margin:0 150px;display:flex;justify-content:space-between;align-items:center;height:100%}.NavBar.svelte-1105uq2{border-bottom:1px solid var(--light-gray);height:80px;position:fixed;width:100%;top:0;left:0;transition-duration:.4s;background-color:white;z-index:10}.fake-navbar.svelte-1105uq2{height:80px}.shadow.svelte-1105uq2{height:60px;box-shadow:0 2px 4px rgba(100,100,100,.2);border:none}
.btn.svelte-1pgqy81{border-radius:6px;background-color:var(--primary);padding:14px 58px;box-shadow:0 1px 4px var(--primary);color:white;font-size:1.1em;border:none;cursor:pointer;outline:none;transition-duration:.3s}.btn.svelte-1pgqy81:hover{box-shadow:0 4px 12px var(--primary)}
.card.svelte-15b3dph{border-radius:6px;border:1px solid var(--light-gray);padding:6px 46px;transition:box-shadow .2s}.title.svelte-15b3dph{font-size:2.1em;cursor:pointer}.title.svelte-15b3dph:hover{text-decoration:underline}.card+.card.svelte-15b3dph{margin-top:20px}.marg.svelte-15b3dph{margin:24px 0}.fade.svelte-15b3dph{opacity:.8}
.wrapper.svelte-fh4vft{position:absolute;width:100%;height:100%;display:flex;justify-content:center;align-items:center}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */